package weatherbot.domain;

import java.util.Objects;

/**
 * This class is used to create and handle Location-objects, 
 * i.e. objects containing information about cities for which users make weather searches.
 */
public class Location {

    private Integer id;
    private String location;
    private long userId;

    /**
     * Empty constructor that enables Spring work with databases
     */
    public Location() {

    }

    /**
     * Creates location object using city name
     * @param location city to be added as location
     */
    public Location(String location) {
        this(0, location, 0l);
    }

    /**
     * Creates location object using city name and user id
     * @param location city to be added as location
     * @param userId the id of the user who is adding the city to locations list
     */
    public Location(String location, long userId) {
        this(0, location, userId);
    }

    /**
     * Creates location object using city name, user id and an id automatically generated by the database
     * @param id id automatically generated by the database when location is added to the database
     * @param location city to be added as location
     * @param userId the id of the user who is adding the city to locations list
     */
    public Location(Integer id, String location, long userId) {
        this.id = id;
        this.location = location;
        this.userId = userId;
    }

    /**
     * Returns location id number automatically generated by the database
     * @return returns location id
     */
    public Integer getId() {
        return id;
    }

    /**
     * Sets location id received from the database when the object was added 
     * @param id id automatically generated by the database
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Returns city name represented by this location object
     * @return returns city name
     */
    public String getLocation() {
        return location;
    }

    /**
     * Sets city name for this location object
     * @param location the name of the city to be added as location
     */
    public void setLocation(String location) {
        this.location = location;
    }

    /**
     * Returns the id of the user who has created current location
     * @return returns user id
     */
    public long getUserId() {
        return userId;
    }

    /**
     * Sets the id of the user who has created current location
     * @param userId the id of the user  who has created current location
     */
    public void setUserId(long userId) {
        this.userId = userId;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 11 * hash + Objects.hashCode(this.location);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Location other = (Location) obj;
        if (!Objects.equals(this.location, other.location)) {
            return false;
        }
        return true;
    }
    
    @Override
    public String toString() {
        return this.location;
    }

}
